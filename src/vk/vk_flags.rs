bitflags! {
    #[repr(C)]
    pub struct VkDeviceCreateFlags: u32 {
        const RESERVED_FOR_FUTURE_USE = 0;
    }
}

bitflags! {
    #[repr(C)]
    pub struct VkDeviceQueueCreateFlagBits: u32 {
        const VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT = 0x00000001;
        const VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF;
    }
}

bitflags! {
    #[repr(C)]
    pub struct VkFormatFeatureFlagBits: u32 {
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT = 0x00000001;
        const VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT = 0x00000002;
        const VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT = 0x00000004;
        const VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT = 0x00000008;
        const VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT = 0x00000010;
        const VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = 0x00000020;
        const VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT = 0x00000040;
        const VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT = 0x00000080;
        const VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT = 0x00000100;
        const VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT = 0x00000200;
        const VK_FORMAT_FEATURE_BLIT_SRC_BIT = 0x00000400;
        const VK_FORMAT_FEATURE_BLIT_DST_BIT = 0x00000800;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = 0x00001000;
        const VK_FORMAT_FEATURE_TRANSFER_SRC_BIT = 0x00004000;
        const VK_FORMAT_FEATURE_TRANSFER_DST_BIT = 0x00008000;
        const VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT = 0x00020000;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = 0x00040000;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = 0x00080000;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = 0x00100000;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = 0x00200000;
        const VK_FORMAT_FEATURE_DISJOINT_BIT = 0x00400000;
        const VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT = 0x00800000;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT = 0x00010000;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = 0x00002000;
        const VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = 0x20000000;
        const VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT = 0x01000000;
        const VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR = Self::VK_FORMAT_FEATURE_TRANSFER_SRC_BIT.bits;
        const VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR = Self::VK_FORMAT_FEATURE_TRANSFER_DST_BIT.bits;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT = Self::VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT.bits;
        const VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = Self::VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT.bits;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = Self::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT.bits;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = Self::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT.bits;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = Self::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT.bits;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = Self::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT.bits;
        const VK_FORMAT_FEATURE_DISJOINT_BIT_KHR = Self::VK_FORMAT_FEATURE_DISJOINT_BIT.bits;
        const VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR = Self::VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT.bits;
        const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = Self::VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG.bits;
        const VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFF;
    }
}

bitflags! {
    #[repr(C)]
    pub struct VkQueueFlagBits: u32 {
        const VK_QUEUE_GRAPHICS_BIT = 0x00000001;
        const VK_QUEUE_COMPUTE_BIT = 0x00000002;
        const VK_QUEUE_TRANSFER_BIT = 0x00000004;
        const VK_QUEUE_SPARSE_BINDING_BIT = 0x00000008;
        const VK_QUEUE_PROTECTED_BIT = 0x00000010;
        const VK_QUEUE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF;
    }
}

bitflags! {
#[repr(C)]
    pub struct VkSampleCountFlagBits: u32 {
        const VK_SAMPLE_COUNT_1_BIT = 0x00000001;
        const VK_SAMPLE_COUNT_2_BIT = 0x00000002;
        const VK_SAMPLE_COUNT_4_BIT = 0x00000004;
        const VK_SAMPLE_COUNT_8_BIT = 0x00000008;
        const VK_SAMPLE_COUNT_16_BIT = 0x00000010;
        const VK_SAMPLE_COUNT_32_BIT = 0x00000020;
        const VK_SAMPLE_COUNT_64_BIT = 0x00000040;
        const VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF;
    }
}
